#!/bin/sh

##################################################################
##
##  proxy-restrict-firewall
##  Configure Qubes firewall for use with a proxy such as OpenVPN.
##
##  Note: For customization, add rules to a filename in firewall.d
##  other than '90_proxy-restrict'.
##
##################################################################

# Export Qubes DNS nameserver NS1 and NS2
. /var/run/qubes/qubes-ns

# Fallback to obtaining environment variables
ns=$(grep -v '^#' /etc/resolv.conf | grep nameserver | awk '{print $2}')
if [ -z "${NS1}" ]; then
  NS1=$(echo "${ns}" | cut -d " " -f 1)  # 10.139.1.1
fi
if [ -z "${NS2}" ]; then
  NS2=$(echo "${ns}" | cut -d " " -f 2)  # 10.139.1.2
fi

# Stop all leaks between downstream (vif+) and upstream (Internet eth0):
nft flush chain ip filter OUTPUT
nft add table inet filter
nft add chain inet filter forward { type filter hook forward priority 0 \; policy drop \; }

nft 'insert rule ip filter FORWARD oifname "eth0" counter drop'
nft 'insert rule ip filter FORWARD iifname "eth0" counter drop'

# Ensure only traffic destined for the tun+ interface is forwarded
nft flush chain ip filter QBS-FORWARD
nft 'add rule ip filter QBS-FORWARD oifname "tun*" tcp flags syn / syn,rst counter tcp option maxseg size set rt mtu'
nft 'add rule ip filter QBS-FORWARD iifname "vif*" oifname "tun*" counter accept'
nft 'add rule ip filter QBS-FORWARD counter drop'

# Block INPUT from proxy(s):
##iptables -P INPUT DROP
#Translation not implemented
#nft 'insert rule ip filter INPUT iifname "tun*" counter drop'

# Restrict connections to tun device only
nft delete rule inet filter input drop
nft 'add rule ip filter INPUT iifname "tun*" counter accept'
nft 'add rule ip filter INPUT counter drop'

# Allow established traffic:
#nft 'add rule ip filter INPUT ct state established counter accept'

# Allow DNS lookups from local via tun device
if [ -n "${NS1}" ]; then
  nft 'insert rule ip filter INPUT iifname "tun*" ip saddr "${NS1}" udp sport 53 ct state established counter accept'
  nft 'insert rule ip filter INPUT iifname "tun*" ip saddr "${NS1}" tcp sport 53 ct state established counter accept'
fi
if [ -n "${NS2}" ]; then
  nft 'insert rule ip filter INPUT iifname "tun*" ip saddr "${NS2}" udp sport 53 ct state established counter accept'
  nft 'insert rule ip filter INPUT iifname "tun*" ip saddr "${NS2}" tcp sport 53 ct state established counter accept'
fi

# Disable icmp packets
nft list chain inet filter input | grep -q 'iifname "vif+" icmp accept'
if [ $? -eq 0 ]; then
  nft delete rule inet filter input iifname "vif+" ip protocol icmp accept
fi
nft list chain inet filter input | grep -q 'iifname "vif+" reject with icmp host-prohibited'
if [ $? -eq 0 ]; then
  nft delete rule inet filter input iifname "vif+" reject with icmp host-prohibited
fi
nft 'insert rule ip filter INPUT ip protocol icmp counter drop'

# Drop invalid connections
nft 'insert rule ip filter INPUT tcp flags 0x0 / fin,syn,rst,psh,ack,urg counter drop'
nft 'insert rule ip filter INPUT tcp flags fin,syn,rst,psh,ack,urg / fin,syn,rst,psh,ack,urg counter drop'
nft 'insert rule ip filter INPUT ip frag-off & 0x1fff != 0 counter drop'
nft 'insert rule ip filter INPUT tcp flags syn,rst / syn,rst counter drop'
nft 'insert rule ip filter INPUT tcp flags fin,syn / fin,syn counter drop'
nft 'insert rule ip filter INPUT tcp flags fin,syn,rst,ack / fin,syn,rst,psh,ack,urg counter drop'
nft 'insert rule ip filter INPUT ct state invalid counter drop'
nft 'insert rule ip filter OUTPUT ct state established counter accept'
nft 'insert rule ip filter OUTPUT tcp flags 0x0 / fin,syn,rst,psh,ack,urg counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT tcp flags fin,syn,rst,psh,ack,urg / fin,syn,rst,psh,ack,urg counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT ip frag-off & 0x1fff != 0 counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT tcp flags syn,rst / syn,rst counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT tcp flags fin,syn / fin,syn counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT tcp flags fin,syn,rst,ack / fin,syn,rst,psh,ack,urg counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT ct state invalid counter reject with icmp type admin-prohibited'
nft 'insert rule ip filter OUTPUT ct state invalid counter reject with icmp type admin-prohibited'
